<% auth_model = @presenter.solr_document["has_model_ssim"].first %>
<% provide :page_title, 'Authorities' %>
<% provide :page_header do %>
  <h2 class="lower"><%= @presenter.label %></h2>(<%= auth_model %>)
<% end %>

  <%= link_to "Edit", "#{records_path}/#{@presenter.id}/edit", class: 'btn btn-default btn-edit' %>&nbsp;
  <%= link_to "New #{auth_model}", "#{records_path}/new?utf8=%E2%9C%93&type=#{auth_model}&commit=Next", class: 'btn btn-default btn-new' %>
  <style>
    .label {color: #333; font-weight: normal; font-size: 14px;}
    th {width: 200px;}
    td {width: 600px;}
  </style>
  <div id="content">
    <table class="table table-striped <%= dom_class(@presenter) %> attributes">
      <thead>
        <tr><th><%= t('.attribute_name_label') %></th><th><%= t('.attribute_values_label') %></th></tr>
      </thead>
      <tbody>
      <% @presenter.class.terms.each do |term| %>
        <% 
          # option [Hash] for renderer and authority urls
          opts = {} 
          if !@presenter.solr_document["#{term.to_s}_ssim"].nil?
          uri = @presenter.solr_document["#{term}_ssim"]
          value = @presenter.send(term)
          uri_hash = Hash[ *value.each_with_index.collect { |v, i| [ v, uri[i]] }.flatten ]
          opts = {:render_as => 'AuthorityAttributeRenderer', :uri => uri_hash}
          end
        %>

        <%= @presenter.attribute_to_html(term, opts) %>
      <% end %>
    </table>
  </div>
